[2018-04-15 16:18:04,829] TRACE Controller 0 epoch 4 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:04,843] ERROR Controller 0 epoch 4 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:18:05,003] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:18:05,006] TRACE Controller 0 epoch 4 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:18:05,006] TRACE Controller 0 epoch 4 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:05,006] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:18:05,006] TRACE Controller 0 epoch 4 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:05,037] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2018-04-15 16:18:05,042] TRACE Controller 0 epoch 4 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:18:05,048] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 4 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:05,048] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 4 for partition [kafka_test,0] since its associated leader epoch 2 is old. Current leader epoch is 2 (state.change.logger)
[2018-04-15 16:18:05,051] TRACE Controller 0 epoch 4 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:18:05,052] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2018-04-15 16:18:05,053] TRACE Controller 0 epoch 4 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:18:05,054] TRACE Controller 0 epoch 4 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:05,055] TRACE Controller 0 epoch 4 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:18:05,055] TRACE Controller 0 epoch 4 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:05,057] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 4 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:05,057] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:18:05,057] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:05,058] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:18:05,058] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:18:05,060] TRACE Controller 0 epoch 4 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:18:05,062] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2018-04-15 16:18:05,063] TRACE Controller 0 epoch 4 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:25:06,202] TRACE Controller 0 epoch 5 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,209] ERROR Controller 0 epoch 5 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:25:06,258] TRACE Controller 0 epoch 5 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:25:06,259] TRACE Controller 0 epoch 5 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:25:06,260] TRACE Controller 0 epoch 5 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,260] TRACE Controller 0 epoch 5 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:25:06,260] TRACE Controller 0 epoch 5 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,264] TRACE Controller 0 epoch 5 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,265] TRACE Controller 0 epoch 5 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:25:06,265] TRACE Controller 0 epoch 5 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,266] TRACE Controller 0 epoch 5 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:25:06,271] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 0 (state.change.logger)
[2018-04-15 16:25:06,272] TRACE Controller 0 epoch 5 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:25:06,272] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 5 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,272] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition [kafka_test,0] since its associated leader epoch 3 is old. Current leader epoch is 3 (state.change.logger)
[2018-04-15 16:25:06,276] TRACE Controller 0 epoch 5 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:25:06,276] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 2 (state.change.logger)
[2018-04-15 16:25:06,276] TRACE Controller 0 epoch 5 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:25:06,277] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 5 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,277] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 5 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,277] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 5 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:25:06,277] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 5 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:25:06,278] TRACE Controller 0 epoch 5 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:25:06,283] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 4 (state.change.logger)
[2018-04-15 16:25:06,284] TRACE Controller 0 epoch 5 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:28:37,289] TRACE Controller 0 epoch 6 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,292] ERROR Controller 0 epoch 6 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:28:37,323] TRACE Controller 0 epoch 6 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:28:37,324] TRACE Controller 0 epoch 6 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:28:37,324] TRACE Controller 0 epoch 6 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,324] TRACE Controller 0 epoch 6 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:28:37,324] TRACE Controller 0 epoch 6 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,370] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 0 (state.change.logger)
[2018-04-15 16:28:37,370] TRACE Controller 0 epoch 6 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:28:37,371] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 6 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,371] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 6 for partition [kafka_test,0] since its associated leader epoch 4 is old. Current leader epoch is 4 (state.change.logger)
[2018-04-15 16:28:37,371] TRACE Controller 0 epoch 6 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:28:37,371] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 2 (state.change.logger)
[2018-04-15 16:28:37,371] TRACE Controller 0 epoch 6 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:28:37,371] TRACE Controller 0 epoch 6 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,371] TRACE Controller 0 epoch 6 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:28:37,371] TRACE Controller 0 epoch 6 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,372] TRACE Controller 0 epoch 6 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:28:37,372] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 6 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,372] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 6 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,372] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 6 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:28:37,372] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 6 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:28:37,372] TRACE Controller 0 epoch 6 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:28:37,372] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 4 (state.change.logger)
[2018-04-15 16:28:37,373] TRACE Controller 0 epoch 6 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:33:26,620] TRACE Controller 0 epoch 7 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,625] ERROR Controller 0 epoch 7 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:33:26,661] TRACE Controller 0 epoch 7 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:33:26,661] TRACE Controller 0 epoch 7 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:33:26,661] TRACE Controller 0 epoch 7 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,661] TRACE Controller 0 epoch 7 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:33:26,661] TRACE Controller 0 epoch 7 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,666] TRACE Controller 0 epoch 7 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,666] TRACE Controller 0 epoch 7 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:33:26,666] TRACE Controller 0 epoch 7 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,666] TRACE Controller 0 epoch 7 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:33:26,669] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 7 with correlation id 0 (state.change.logger)
[2018-04-15 16:33:26,669] TRACE Controller 0 epoch 7 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:33:26,669] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 7 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,669] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 7 for partition [kafka_test,0] since its associated leader epoch 5 is old. Current leader epoch is 5 (state.change.logger)
[2018-04-15 16:33:26,683] TRACE Controller 0 epoch 7 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:33:26,683] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:6),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 7 with correlation id 2 (state.change.logger)
[2018-04-15 16:33:26,683] TRACE Controller 0 epoch 7 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:33:26,684] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 7 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,684] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 7 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,684] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 7 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:33:26,684] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 7 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:33:26,685] TRACE Controller 0 epoch 7 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:33:26,686] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 7 with correlation id 4 (state.change.logger)
[2018-04-15 16:33:26,689] TRACE Controller 0 epoch 7 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:37:17,208] TRACE Controller 0 epoch 8 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,211] ERROR Controller 0 epoch 8 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:37:17,252] TRACE Controller 0 epoch 8 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:37:17,253] TRACE Controller 0 epoch 8 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:37:17,253] TRACE Controller 0 epoch 8 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,253] TRACE Controller 0 epoch 8 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:37:17,253] TRACE Controller 0 epoch 8 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,258] TRACE Controller 0 epoch 8 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,258] TRACE Controller 0 epoch 8 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:37:17,258] TRACE Controller 0 epoch 8 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,258] TRACE Controller 0 epoch 8 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:37:17,274] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 0 (state.change.logger)
[2018-04-15 16:37:17,276] TRACE Controller 0 epoch 8 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:37:17,276] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 8 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,277] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 8 for partition [kafka_test,0] since its associated leader epoch 6 is old. Current leader epoch is 6 (state.change.logger)
[2018-04-15 16:37:17,283] TRACE Controller 0 epoch 8 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:37:17,283] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 2 (state.change.logger)
[2018-04-15 16:37:17,284] TRACE Controller 0 epoch 8 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:37:17,284] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 8 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,284] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 8 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,284] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 8 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:37:17,284] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 8 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:37:17,284] TRACE Controller 0 epoch 8 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:37:17,285] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 4 (state.change.logger)
[2018-04-15 16:37:17,285] TRACE Controller 0 epoch 8 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:40:14,289] TRACE Controller 0 epoch 9 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,292] ERROR Controller 0 epoch 9 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:40:14,321] TRACE Controller 0 epoch 9 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:40:14,322] TRACE Controller 0 epoch 9 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:40:14,322] TRACE Controller 0 epoch 9 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,322] TRACE Controller 0 epoch 9 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:40:14,322] TRACE Controller 0 epoch 9 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,325] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 9 with correlation id 0 (state.change.logger)
[2018-04-15 16:40:14,326] TRACE Controller 0 epoch 9 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,326] TRACE Controller 0 epoch 9 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:40:14,326] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 9 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,326] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 9 for partition [kafka_test,0] since its associated leader epoch 7 is old. Current leader epoch is 7 (state.change.logger)
[2018-04-15 16:40:14,326] TRACE Controller 0 epoch 9 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:40:14,326] TRACE Controller 0 epoch 9 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,327] TRACE Controller 0 epoch 9 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:40:14,327] TRACE Controller 0 epoch 9 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:40:14,328] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:8),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 9 with correlation id 2 (state.change.logger)
[2018-04-15 16:40:14,328] TRACE Controller 0 epoch 9 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:40:14,328] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 9 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,328] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 9 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,329] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 9 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:40:14,329] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 9 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:40:14,330] TRACE Controller 0 epoch 9 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:40:14,331] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 9 with correlation id 4 (state.change.logger)
[2018-04-15 16:40:14,331] TRACE Controller 0 epoch 9 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:42:35,039] TRACE Controller 0 epoch 10 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,050] ERROR Controller 0 epoch 10 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:42:35,163] TRACE Controller 0 epoch 10 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:42:35,195] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 10 with correlation id 0 (state.change.logger)
[2018-04-15 16:42:35,208] TRACE Controller 0 epoch 10 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:42:35,209] TRACE Controller 0 epoch 10 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:42:35,209] TRACE Controller 0 epoch 10 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,209] TRACE Controller 0 epoch 10 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:42:35,209] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 10 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,210] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 10 for partition [kafka_test,0] since its associated leader epoch 8 is old. Current leader epoch is 8 (state.change.logger)
[2018-04-15 16:42:35,210] TRACE Controller 0 epoch 10 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,211] TRACE Controller 0 epoch 10 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:42:35,211] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:9),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 10 with correlation id 2 (state.change.logger)
[2018-04-15 16:42:35,212] TRACE Controller 0 epoch 10 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:42:35,346] TRACE Controller 0 epoch 10 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,347] TRACE Controller 0 epoch 10 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:42:35,348] TRACE Controller 0 epoch 10 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,349] TRACE Controller 0 epoch 10 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:42:35,351] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 10 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,351] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 10 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,351] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 10 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:42:35,353] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 10 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:42:35,354] TRACE Controller 0 epoch 10 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:42:35,355] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 10 with correlation id 4 (state.change.logger)
[2018-04-15 16:42:35,356] TRACE Controller 0 epoch 10 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:43:24,943] TRACE Controller 0 epoch 11 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:24,964] ERROR Controller 0 epoch 11 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:43:25,095] TRACE Controller 0 epoch 11 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:43:25,096] TRACE Controller 0 epoch 11 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:43:25,097] TRACE Controller 0 epoch 11 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:25,098] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 11 with correlation id 0 (state.change.logger)
[2018-04-15 16:43:25,107] TRACE Controller 0 epoch 11 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:43:25,108] TRACE Controller 0 epoch 11 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:25,128] TRACE Controller 0 epoch 11 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:43:25,129] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 11 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:25,129] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 11 for partition [kafka_test,0] since its associated leader epoch 9 is old. Current leader epoch is 9 (state.change.logger)
[2018-04-15 16:43:25,130] TRACE Controller 0 epoch 11 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:25,130] TRACE Controller 0 epoch 11 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:43:25,130] TRACE Controller 0 epoch 11 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:25,130] TRACE Controller 0 epoch 11 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:43:25,131] TRACE Controller 0 epoch 11 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:43:25,132] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:10),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 11 with correlation id 2 (state.change.logger)
[2018-04-15 16:43:25,132] TRACE Controller 0 epoch 11 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:43:25,132] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 11 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:25,133] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 11 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:25,133] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 11 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:43:25,133] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 11 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:43:25,133] TRACE Controller 0 epoch 11 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:43:25,153] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 11 with correlation id 4 (state.change.logger)
[2018-04-15 16:43:25,154] TRACE Controller 0 epoch 11 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:50:46,704] TRACE Controller 0 epoch 12 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:46,850] ERROR Controller 0 epoch 12 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:50:47,249] TRACE Controller 0 epoch 12 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:50:47,256] TRACE Controller 0 epoch 12 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:50:47,258] TRACE Controller 0 epoch 12 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:47,259] TRACE Controller 0 epoch 12 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:50:47,262] TRACE Controller 0 epoch 12 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:47,298] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 12 with correlation id 0 (state.change.logger)
[2018-04-15 16:50:47,300] TRACE Controller 0 epoch 12 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:50:47,302] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 12 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:47,302] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 12 for partition [kafka_test,0] since its associated leader epoch 10 is old. Current leader epoch is 10 (state.change.logger)
[2018-04-15 16:50:47,303] TRACE Controller 0 epoch 12 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:50:47,307] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:11),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 12 with correlation id 2 (state.change.logger)
[2018-04-15 16:50:47,409] TRACE Controller 0 epoch 12 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:50:47,449] TRACE Controller 0 epoch 12 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:47,450] TRACE Controller 0 epoch 12 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:50:47,451] TRACE Controller 0 epoch 12 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:47,452] TRACE Controller 0 epoch 12 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:50:47,483] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 12 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:47,483] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 12 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:47,484] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 12 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:50:47,484] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 12 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:50:47,485] TRACE Controller 0 epoch 12 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:50:47,487] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 12 with correlation id 4 (state.change.logger)
[2018-04-15 16:50:47,489] TRACE Controller 0 epoch 12 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:53:38,595] TRACE Controller 0 epoch 13 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,604] ERROR Controller 0 epoch 13 initiated state change for partition [kafka_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [kafka_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2018-04-15 16:53:38,629] TRACE Controller 0 epoch 13 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:53:38,629] TRACE Controller 0 epoch 13 changed state of replica 0 for partition [kafka_test,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2018-04-15 16:53:38,629] TRACE Controller 0 epoch 13 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,629] TRACE Controller 0 epoch 13 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:53:38,629] TRACE Controller 0 epoch 13 started leader election for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,632] TRACE Controller 0 epoch 13 elected leader 0 for Offline partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,635] TRACE Controller 0 epoch 13 changed partition [kafka_test,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2018-04-15 16:53:38,635] TRACE Controller 0 epoch 13 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:13) to broker 0 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,636] TRACE Controller 0 epoch 13 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:13) to broker 0 for partition kafka_test-0 (state.change.logger)
[2018-04-15 16:53:38,655] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 13 with correlation id 0 (state.change.logger)
[2018-04-15 16:53:38,655] TRACE Controller 0 epoch 13 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:53:38,657] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12),ReplicationFactor:1),AllReplicas:0) correlation id 1 from controller 0 epoch 13 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,657] WARN Broker 0 ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 13 for partition [kafka_test,0] since its associated leader epoch 11 is old. Current leader epoch is 11 (state.change.logger)
[2018-04-15 16:53:38,658] TRACE Controller 0 epoch 13 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=13}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:53:38,658] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:12),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 13 with correlation id 2 (state.change.logger)
[2018-04-15 16:53:38,658] TRACE Controller 0 epoch 13 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:53:38,658] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:13),ReplicationFactor:1),AllReplicas:0) correlation id 3 from controller 0 epoch 13 for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,659] TRACE Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 13 starting the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,659] INFO Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 13 for partition [kafka_test,0] since it is already the leader for the partition. (state.change.logger)
[2018-04-15 16:53:38,659] TRACE Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 13 for the become-leader transition for partition [kafka_test,0] (state.change.logger)
[2018-04-15 16:53:38,659] TRACE Controller 0 epoch 13 received response {error_code=0,partitions=[{topic=kafka_test,partition=0,error_code=0}]} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
[2018-04-15 16:53:38,659] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:13),ReplicationFactor:1),AllReplicas:0) for partition [kafka_test,0] in response to UpdateMetadata request sent by controller 0 epoch 13 with correlation id 4 (state.change.logger)
[2018-04-15 16:53:38,660] TRACE Controller 0 epoch 13 received response {error_code=0} for a request sent to broker Node(0, ubuntu, 9092) (state.change.logger)
